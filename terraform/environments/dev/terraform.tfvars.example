# Example Terraform variables for development environment
# Copy this file to terraform.tfvars and customize as needed

# AWS Configuration
aws_region = "us-east-1"

# Project Configuration
project_name = "ai-crypto-browser"
environment  = "dev"

# VPC Configuration
vpc_cidr = "10.0.0.0/16"
public_subnet_cidrs   = ["10.0.1.0/24", "10.0.2.0/24", "10.0.3.0/24"]
private_subnet_cidrs  = ["10.0.11.0/24", "10.0.12.0/24", "10.0.13.0/24"]
database_subnet_cidrs = ["10.0.21.0/24", "10.0.22.0/24", "10.0.23.0/24"]

# NAT Gateway Configuration (Cost Optimization)
enable_nat_gateway     = true
single_nat_gateway     = true   # Use single NAT Gateway for cost savings in dev
one_nat_gateway_per_az = false  # Set to true for production high availability

# EKS Configuration
kubernetes_version = "1.28"
cluster_endpoint_public_access_cidrs = ["0.0.0.0/0"]  # Restrict this in production

# Node Group Configuration
node_group_capacity_type  = "ON_DEMAND"
node_group_instance_types = ["t3.medium"]
node_group_ami_type      = "AL2_x86_64"
node_group_disk_size     = 20
node_group_desired_size  = 2
node_group_max_size      = 4
node_group_min_size      = 1

# RDS Configuration
postgres_version          = "15.4"
rds_instance_class       = "db.t3.micro"
rds_allocated_storage    = 20
rds_max_allocated_storage = 100
database_name            = "ai_crypto_browser"
database_username        = "postgres"
backup_retention_period  = 7
rds_deletion_protection  = false  # Set to true in production

# ElastiCache Configuration
redis_version                        = "7.0"
elasticache_node_type               = "cache.t3.micro"
elasticache_num_cache_clusters      = 1
elasticache_snapshot_retention_limit = 5
elasticache_auth_token_enabled      = true
