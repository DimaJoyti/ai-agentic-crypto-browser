# AI Agentic Browser Main Configuration

# Server Configuration
server:
  host: "0.0.0.0"
  port: 8080
  read_timeout: 30s
  write_timeout: 30s
  idle_timeout: 120s
  max_header_bytes: 1048576

# Database Configuration
database:
  host: "localhost"
  port: 5432
  name: "agentic_browser"
  user: "postgres"
  password: "password"
  ssl_mode: "disable"
  max_connections: 100
  max_idle_connections: 10
  max_lifetime: "1h"
  log_level: "warn"

# Redis Configuration
redis:
  host: "localhost"
  port: 6379
  password: ""
  db: 0
  max_retries: 3
  pool_size: 10
  min_idle_connections: 5
  dial_timeout: "5s"
  read_timeout: "3s"
  write_timeout: "3s"
  pool_timeout: "4s"
  idle_timeout: "5m"

# JWT Configuration
jwt:
  secret: "your-super-secret-jwt-key"
  expiry: "24h"
  refresh_expiry: "168h"
  issuer: "ai-agentic-browser"
  algorithm: "HS256"

# Logging Configuration
logging:
  level: "info"
  format: "json"
  output: "stdout"
  add_caller: true
  add_trace: true

# CORS Configuration
cors:
  allowed_origins:
    - "http://localhost:3000"
    - "https://yourdomain.com"
  allowed_methods:
    - "GET"
    - "POST"
    - "PUT"
    - "DELETE"
    - "OPTIONS"
  allowed_headers:
    - "Origin"
    - "Content-Type"
    - "Accept"
    - "Authorization"
    - "X-Requested-With"
  exposed_headers:
    - "Content-Length"
  allow_credentials: true
  max_age: 86400

# Rate Limiting Configuration
rate_limit:
  enabled: true
  requests_per_minute: 1000
  burst: 100
  skip_successful: false
  key_generator: "ip"

# Security Configuration
security:
  encryption_key: "your-32-character-encryption-key"
  csrf_secret: "your-csrf-secret-key"
  secure_cookies: false
  same_site_cookies: "lax"
  password_min_length: 8
  max_login_attempts: 5
  lockout_duration: "15m"

# File Upload Configuration
upload:
  max_file_size: "10MB"
  upload_path: "./uploads"
  allowed_types:
    - "jpg"
    - "jpeg"
    - "png"
    - "gif"
    - "pdf"
    - "doc"
    - "docx"

# Feature Flags
features:
  ai_agent: true
  browser_automation: true
  web3_integration: true
  multi_tenancy: false
  analytics: true
  notifications: true

# Firebase Configuration
firebase:
  project_id: "ai-agentic-crypto-browser"
  credentials_path: "./configs/firebase-service-account.json"
  database_url: "https://ai-agentic-crypto-browser-default-rtdb.firebaseio.com"
  storage_bucket: "ai-agentic-crypto-browser.appspot.com"
  enable_auth: true
  enable_firestore: true
  enable_realtime_db: true
  enable_storage: true
  enable_analytics: true
  enable_messaging: true
  enable_emulators: false
  emulator_config:
    host: "localhost"
    auth_port: 9099
    firestore_port: 8080
    database_port: 9000
    storage_port: 9199
    functions_port: 5001
    hosting_port: 5000
    pubsub_port: 8085
    ui_port: 4000

# MCP Integration Configuration
mcp:
  crypto_analysis:
    enabled: true
    update_interval: "30s"
    symbols: ["BTCUSDT", "ETHUSDT", "ADAUSDT", "SOLUSDT"]
  sentiment_analysis:
    enabled: true
    sources: ["reddit", "twitter", "news"]
    update_interval: "5m"
  browser_automation:
    enabled: true
    headless: true
    timeout: "30s"
  firebase:
    enabled: true
    collections:
      trading_signals: "trading_signals"
      market_data: "market_data"
      user_portfolios: "user_portfolios"
      trading_strategies: "trading_strategies"
      risk_metrics: "risk_metrics"
      performance_analytics: "performance_analytics"
    realtime_paths:
      live_prices: "/live_prices"
      active_orders: "/active_orders"
      user_sessions: "/user_sessions"
      system_status: "/system_status"
  cloudflare:
    enabled: false
  search:
    enabled: true
    providers: ["google", "bing"]
  update_interval: "1m"
  enable_realtime: true
  buffer_size: 1000

# Environment Configuration
environment: "development"
debug: false
enable_pprof: false
pprof_port: 6060
