name: Deploy to Cloudflare Pages

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Deploy to Cloudflare Pages
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'web/package-lock.json'

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: |
            web/node_modules
            ~/.npm
            web/.next/cache
          key: ${{ runner.os }}-node-${{ hashFiles('web/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        working-directory: ./web
        run: |
          npm ci --prefer-offline --no-audit --progress=false
        env:
          NPM_CONFIG_CACHE: /tmp/.npm

      - name: Build application
        working-directory: ./web
        run: |
          npm run build:cloudflare
        env:
          NODE_ENV: production
          NEXT_PUBLIC_CLOUDFLARE_DEPLOYMENT: true
          NEXT_PUBLIC_API_BASE_URL: https://ai-crypto-browser-api.gcp-inspiration.workers.dev
          NEXT_PUBLIC_WS_URL: wss://ai-crypto-browser-api.gcp-inspiration.workers.dev
          NEXT_PUBLIC_CHAIN_ID: 1

      - name: Deploy to Cloudflare Pages
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: ai-agentic-crypto-browser
          directory: web/out
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
          wranglerVersion: '3'

      - name: Add deployment comment
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'ðŸš€ Preview deployment ready! Check it out at the deployment URL.'
            })
