apiVersion: apps/v1
kind: Deployment
metadata:
  name: ai-agentic-crypto-browser
  namespace: ai-browser
  labels:
    app: ai-agent
    version: v1.0.0
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: ai-agent
  template:
    metadata:
      labels:
        app: ai-agent
        version: v1.0.0
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: ai-agent-service-account
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        fsGroup: 1001
      containers:
      - name: ai-agent
        image: ai-agentic-crypto-browser:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        env:
        - name: ENV
          value: "production"
        - name: LOG_LEVEL
          value: "info"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: ai-agent-secrets
              key: database-url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: ai-agent-secrets
              key: redis-url
        - name: BROWSER_HEADLESS
          value: "true"
        - name: BROWSER_TIMEOUT
          value: "30s"
        - name: AI_MODEL_TIMEOUT
          value: "60s"
        - name: MARKET_ADAPTATION_ENABLED
          value: "true"
        - name: PATTERN_DETECTION_WINDOW
          value: "7d"
        - name: ADAPTATION_THRESHOLD
          value: "0.7"
        - name: REAL_TIME_ADAPTATION
          value: "true"
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - name: config-volume
          mountPath: /app/configs
          readOnly: true
        - name: logs-volume
          mountPath: /app/logs
        - name: data-volume
          mountPath: /app/data
      volumes:
      - name: config-volume
        configMap:
          name: ai-agent-config
      - name: logs-volume
        emptyDir: {}
      - name: data-volume
        persistentVolumeClaim:
          claimName: ai-agent-data-pvc
      nodeSelector:
        kubernetes.io/arch: amd64
      tolerations:
      - key: "ai-workload"
        operator: "Equal"
        value: "true"
        effect: "NoSchedule"
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - ai-agent
              topologyKey: kubernetes.io/hostname

---
apiVersion: v1
kind: Service
metadata:
  name: ai-agent-service
  namespace: ai-browser
  labels:
    app: ai-agent
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 8080
    protocol: TCP
    name: http
  selector:
    app: ai-agent

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ai-agent-service-account
  namespace: ai-browser

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: ai-agent-config
  namespace: ai-browser
data:
  config.yaml: |
    server:
      port: 8080
      timeout: 30s
    ai:
      model_timeout: 60s
      max_concurrent_requests: 100
    market_adaptation:
      enabled: true
      pattern_detection_window: 168h  # 7 days
      adaptation_threshold: 0.7
      min_pattern_occurrences: 3
      strategy_update_frequency: 1h
      performance_evaluation_window: 24h
      real_time_adaptation: true
      confidence_threshold: 0.6
    browser:
      headless: true
      timeout: 30s
      max_concurrent_sessions: 10
    logging:
      level: info
      format: json
    metrics:
      enabled: true
      path: /metrics

---
apiVersion: v1
kind: Secret
metadata:
  name: ai-agent-secrets
  namespace: ai-browser
type: Opaque
data:
  # Base64 encoded values - replace with actual values
  database-url: cG9zdGdyZXM6Ly9wb3N0Z3JlczpwYXNzd29yZEBwb3N0Z3Jlcy1zZXJ2aWNlOjU0MzIvYWlfYnJvd3Nlcj9zc2xtb2RlPWRpc2FibGU=
  redis-url: cmVkaXM6Ly9yZWRpcy1zZXJ2aWNlOjYzNzk=

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ai-agent-data-pvc
  namespace: ai-browser
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: fast-ssd

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ai-agent-ingress
  namespace: ai-browser
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  tls:
  - hosts:
    - api.ai-crypto-browser.com
    secretName: ai-agent-tls
  rules:
  - host: api.ai-crypto-browser.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: ai-agent-service
            port:
              number: 80

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: ai-agent-hpa
  namespace: ai-browser
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: ai-agentic-crypto-browser
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
